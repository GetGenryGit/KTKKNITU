@inherits LayoutComponentBase

@inject IPreferencesService preferencesService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider




<div class="container">
    <aside class="@sidebarState">
        <div class="top">
            <div class="logo">
                <img src="\Images\logo.png">
                <h2 class="text-muted">KTK Admin</h2>
            </div>
            <div class="close">
                <span class="material-symbols-sharp" @onclick="ChangeSidebarState">close</span>
            </div>
        </div>

        <div class="sidebar">
           
            <NavLink href="/dictionary">

                <span class="material-symbols-sharp">menu_book</span>
                <h3>Справочники</h3>

            </NavLink>
            <NavLink href="/schedule">

                <span class="material-symbols-sharp">calendar_month</span>
                <h3>Расписание</h3>

            </NavLink>
            @* <NavLink href="/history_of_schedule">

                <span class="material-symbols-sharp">history</span>
                <h3>Журнал изменений</h3>

            </NavLink> *@

            <AuthorizeView Roles="А.П.">
                <Authorized>
                    @* <NavLink href="/admin_panel">
                        <span class="material-symbols-sharp">
                            <span class="material-symbols-sharp">admin_panel_settings</span>
                        </span>
                        <h3>Панель управления пользователями</h3>
                    </NavLink> *@

                    @* <NavLink href="/history_of_doing">
                        <span class="material-symbols-sharp">browse_activity</span>
                        <h3>Журнал действий</h3>
                    </NavLink> *@
                </Authorized>
            </AuthorizeView>

            <a draggable="false" @onclick="Logout">
                <span class="material-symbols-sharp">logout</span>
                <h3>Выйти</h3>
            </a>
        </div>
    </aside>

    <main>
        @Body
    </main>

    <div class="right">
        <div class="top">
            <button class="open" @onclick="ChangeSidebarState">
                <span class="material-symbols-sharp">menu</span>
            </button>
            <div class="profile">
                <div class="info">
                    <AuthorizeView>
                        <Authorized>
                            <p>@context.User.Identity!.Name</p>
                            @if (context.User.IsInRole("А.П."))
                            {
                                <small class="text-muted">А.П.</small>
                            }
                            else if (context.User.IsInRole("О.Р."))
                            {
                                <small class="text-muted">О.Р.</small>
                            }
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
            <div class="profile-photo">
                <img src="Images/logo.png">
            </div>
        </div>
    </div>
</div>


@code {
    private string role;

    private const string sidebarOff = "inactive";
    private const string sidebarOn = "active";

    private const string activePage = "active";

    public string sidebarState = sidebarOff;

    private void ChangeSidebarState() => sidebarState = sidebarState == sidebarOn ? sidebarOff : sidebarOn;

    protected override void OnInitialized()
    {

    }

    private async Task Logout()
    {
        bool answer = await App.Current.MainPage.DisplayAlert("Выход к окну авторизации", "Вы уверенны что хотите выйти?", "Да", "Нет");

        if (!answer)
            return;

        preferencesService.LoginPreference = string.Empty;
        preferencesService.PasswordPreference = string.Empty;

        var authenticationService = (AuthenticationService)AuthenticationStateProvider;
        await authenticationService.ActualizerAuthInf(null);

        navigationManager.NavigateTo("/", true);
    }

}